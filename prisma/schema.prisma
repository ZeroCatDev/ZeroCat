generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model ow_comment {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id    Int?
  type       String?   @default("comment") @db.VarChar(64)
  text       String?   @db.MediumText
  insertedAt DateTime? @default(now()) @db.Timestamp(0)
  user_ip    String?   @default("") @db.VarChar(100)
  link       String?   @db.VarChar(128)
  pid        Int?
  rid        Int?
  status     String    @default("") @db.VarChar(50)
  user_ua    String?   @db.MediumText
  url        String?   @db.VarChar(255)
  page_type  String?   @db.VarChar(32)
  page_id    String?   @db.VarChar(32)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  page_key   String?   @db.VarChar(128)

  // Relations
  user       ow_users? @relation(fields: [user_id], references: [id])

  @@index([page_type, page_id, insertedAt], map: "idx_projects_comments")
  @@index([user_id], map: "idx_comment_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ow_projects {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  name           String    @db.VarChar(128)
  default_branch String?   @db.VarChar(128)
  type           String?   @default("text") @db.VarChar(32)
  license        String?   @db.VarChar(32)
  authorid       Int
  thumbnail      String?   @db.VarChar(37) @default("")
  state          String?   @default("private") @db.VarChar(32)
  view_count     Int?      @default(0) @db.UnsignedInt
  like_count     Int?      @default(0)
  favo_count     Int?      @default(0)
  time           DateTime? @default(now()) @db.Timestamp(0)
  title          String?   @default("ZeroCat新项目") @db.VarChar(1000)
  description    String?   @default("ZeroCat上的项目") @db.VarChar(1000)
  history        Boolean   @default(true)
  devenv         Boolean   @default(true)
  tags           String    @default("") @db.VarChar(100)
  fork           Int?
  star_count     Int?      @default(0)

  // Relations
  author       ow_users?                 @relation("ProjectAuthor", fields: [authorid], references: [id])
  stars        ow_projects_stars[]
  lists        ow_projects_list_items[]
  branches     ow_projects_branch[]
  project_tags ow_projects_tags[]
  extensions   ow_scratch_extensions[]   @relation("ProjectExtensions")
  sample_extensions ow_scratch_extensions[] @relation("SampleProject")
  assets       ow_projects_assets[]      @relation("ProjectAssets")

  @@index([state], map: "idx_projects_state")
  @@index([authorid], map: "idx_project_author")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ow_users {
  id           Int       @unique(map: "id_UNIQUE") @default(autoincrement())
  username     String    @unique(map: "user_UNIQUE") @db.Char(20)
  email        String?   @db.Char(100)
  password     String?   @db.VarChar(255)
  display_name String    @default("ZeroCat创作者") @db.Char(20)
  /// User account status: pending = newly registered, active = normal user, suspended = temporarily disabled, banned = permanently disabled
  status       String    @default("active") @db.VarChar(20)

  // Profile information
  motto        String?   @db.LongText  // One-line introduction
  bio          String?   @db.LongText  // Markdown biography
  location     String?   @db.VarChar(100)
  region       String?   @db.VarChar(100)
  birthday     DateTime? @default("2000-03-31T00:00:00.000Z") @db.Timestamp(0)
  sex          String?   @default("0") @db.VarChar(16)
  url          String?   @db.VarChar(255)
  custom_status Json?    // Contains emoji and status text
  featured_projects Int? // Array of featured project IDs stored as JSON

  // Visual elements
  images       String?   @default("fcd939e653195bb6d057e8c2519f5cc7") @db.VarChar(255)
  avatar       String?   @default("fcd939e653195bb6d057e8c2519f5cc7") @db.VarChar(255)

  // System fields
  type         String?   @default("guest") @db.VarChar(50)
  label        String?   @db.VarChar(255)
  loginTime    DateTime? @db.Timestamp(0) @default(now())
  regTime      DateTime? @db.Timestamp(0) @default(now())
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedAt    DateTime? @updatedAt @db.Timestamp(0)

  // Relations
  auth_tokens             ow_auth_tokens[]
  authored_projects       ow_projects[]           @relation("ProjectAuthor")
  starred_projects        ow_projects_stars[]
  project_lists           ow_projects_lists[]
  contacts                ow_users_contacts[]
  relationships_as_source ow_user_relationships[] @relation("RelationshipSource")
  relationships_as_target ow_user_relationships[] @relation("RelationshipTarget")
  notifications_acted     ow_notifications[]      @relation("NotificationActor")
  events_acted           ow_events[]             @relation("EventActor")
  comments               ow_comment[]
  commits                ow_projects_commits[]
  // OAuth relations
  oauth_applications      ow_oauth_applications[]
  oauth_authorizations    ow_oauth_authorizations[]
  oauth_access_tokens     ow_oauth_access_tokens[]
  kv_store               ow_cache_kv[]
  account_tokens          ow_account_tokens[] @relation("AccountTokens")
  // Asset relations
  uploaded_assets         ow_assets[] @relation("AssetUploader")
  banned_assets           ow_assets[] @relation("AssetBannedBy")
  // Push notification relations
  push_subscriptions      ow_push_subscriptions[] @relation("UserPushSubscriptions")

  @@id([id, username])
}

model ow_projects_file {
  sha256        String    @id @db.VarChar(64)
  source        String?   @db.MediumText
  create_time   DateTime? @default(now()) @db.DateTime(0)
  create_userid Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ow_projects_history {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  authorid    Int      @db.UnsignedInt
  projectid   Int      @db.UnsignedInt
  type        String?  @default("text") @db.VarChar(32)
  time        DateTime @default(now()) @db.Timestamp(0)
  title       String?  @default("ZeroCat新项目") @db.VarChar(50)
  description String?  @default("commit") @db.VarChar(1000)
  source      String?  @db.MediumText
  state       String?  @default("private") @db.VarChar(32)
  licence     String?  @db.VarChar(45)
  tags        String?  @db.VarChar(100)
}

enum ow_config_type {
  STRING
  NUMBER
  BOOLEAN
  ARRAY
  ENUM
}

model ow_config {
  id         Int       @id @default(autoincrement())
  key        String    @unique(map: "config_key") @db.VarChar(255)
  value      String    @db.Text
  type       ow_config_type @default(STRING)
  metadata   Json?
  created_at DateTime? @default(now()) @db.DateTime(0)
  updated_at DateTime? @default(now()) @db.DateTime(0)
}

model ow_users_totp {
  id                Int       @id @default(autoincrement())
  name              String    @default("验证器") @db.VarChar(128)
  user_id           Int
  type              String    @default("totp") @db.VarChar(45)
  status            String    @default("unverified") @db.VarChar(32)
  totp_secret       String?   @db.VarChar(255)
  totp_algorithm    String?   @default("SHA256") @db.VarChar(10)
  totp_digits       Int?      @default(6)
  totp_period       Int?      @default(30)
  totp_last_updated DateTime? @db.Timestamp(0)
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  updated_at        DateTime? @default(now()) @db.Timestamp(0)
}

model ow_projects_tags {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(45)
  projectid  Int
  created_at DateTime? @default(now()) @db.Timestamp(0)

  // Relations
  project ow_projects @relation(fields: [projectid], references: [id])

  @@index([projectid], map: "idx_projectid")
}

/// Project stars model - improved structure
model ow_projects_stars {
  id         Int       @id @default(autoincrement())
  userid     Int
  projectid  Int
  createTime DateTime? @default(now()) @db.Timestamp(0)

  // Relations
  user    ow_users    @relation(fields: [userid], references: [id])
  project ow_projects @relation(fields: [projectid], references: [id])

  @@index([projectid], map: "idx_projects_stars_project")
  @@index([userid], map: "idx_projects_stars_user")
}

/// Project lists model - improved structure
model ow_projects_lists {
  id          Int       @id @default(autoincrement())
  authorid    Int?
  title       String?   @default("收藏夹") @db.VarChar(1024)
  description String?   @default("列表") @db.VarChar(1024)
  state       String?   @default("private") @db.VarChar(32)
  list        String?   @db.MediumText
  updateTime  DateTime? @db.Timestamp(0)
  createTime  DateTime? @default(now()) @db.Timestamp(0)

  // Relations
  author     ow_users?                @relation(fields: [authorid], references: [id])
  list_items ow_projects_list_items[]

  @@index([authorid], map: "idx_author_lists")
}

model ow_projects_commits {
  id                 String   @id @db.VarChar(256)
  project_id         Int
  author_id          Int
  branch             String   @default("main") @db.VarChar(255)
  parent_commit_id   String?  @db.VarChar(256)
  commit_message     String   @db.Text
  commit_date        DateTime @db.DateTime(0)
  commit_file        String   @db.VarChar(256)
  commit_description String?  @db.Text
  depth              Int?     // Optional depth field to track chain length

  // Relations
  parent_commit     ow_projects_commits?       @relation("CommitTree", fields: [parent_commit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  child_commits     ow_projects_commits[]      @relation("CommitTree")
  author            ow_users?                 @relation(fields: [author_id], references: [id])

  @@index([project_id, commit_date], map: "idx_projects_commits_project_date")
  @@index([parent_commit_id], map: "idx_parent_commit")
}

model ow_users_magiclink {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique(map: "token") @db.VarChar(255)
  expiresAt DateTime @db.DateTime(0)
}

model ow_projects_branch {
  id                 Int     @id @default(autoincrement())
  name               String  @db.VarChar(128)
  latest_commit_hash String  @db.VarChar(64)
  description        String  @db.VarChar(128)
  projectid          Int
  protected          String? @default("false") @db.VarChar(45)
  creator            Int?

  // Relations
  project ow_projects @relation(fields: [projectid], references: [id])

  @@unique([projectid, name], map: "unique_project_branch")
  @@index([creator], map: "idx_branch_creator")
}

model ow_users_contacts {
  contact_id    Int                            @id @default(autoincrement())
  user_id       Int
  contact_value String                         @unique(map: "contact_value_UNIQUE") @db.VarChar(255)
  contact_info  String?                        @db.VarChar(255)
  contact_type  ow_users_contacts_contact_type
  is_primary    Boolean?                       @default(false)
  verified      Boolean?                       @default(false)
  metadata      Json?
  created_at    DateTime?                      @default(now()) @db.Timestamp(0)
  updated_at    DateTime?                      @default(now()) @db.Timestamp(0)

  // Relations
  user ow_users @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "idx_user_contacts")
  @@index([user_id, contact_type], map: "idx_user_contact_type")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ow_events {
  id          Int   @id @default(autoincrement()) @db.UnsignedInt
  event_type  String   @db.VarChar(50)
  actor_id    Int      @db.UnsignedInt
  target_type String   @db.VarChar(50)
  target_id   Int   @db.UnsignedInt
  event_data  Json
  created_at  DateTime @default(now()) @db.Timestamp(0)
  public      Int      @default(0) @db.TinyInt

  // Relations
  actor       ow_users @relation("EventActor", fields: [actor_id], references: [id])

  @@index([created_at], map: "idx_created")
  @@index([target_type, target_id], map: "idx_target")
  @@index([event_type, actor_id], map: "idx_type_actor")
}

model ow_projects_list_items {
  id         Int       @id @default(autoincrement())
  listid     Int
  projectid  Int
  createTime DateTime? @default(now()) @db.Timestamp(0)

  // Relations
  list    ow_projects_lists @relation(fields: [listid], references: [id])
  project ow_projects       @relation(fields: [projectid], references: [id])

  @@unique([listid, projectid], map: "unique_list_project")
  @@index([listid], map: "idx_list_items")
  @@index([projectid], map: "idx_project_in_lists")
}

model ow_auth_tokens {
  id                 Int       @id @default(autoincrement())
  user_id            Int
  access_token       String    @unique(map: "idx_access_token") @db.VarChar(255)
  refresh_token      String    @unique(map: "idx_refresh_token") @db.VarChar(255)
  expires_at         DateTime  @db.DateTime(0)
  refresh_expires_at DateTime  @db.DateTime(0)
  created_at         DateTime  @default(now()) @db.DateTime(0)
  updated_at         DateTime  @default(now()) @updatedAt @db.DateTime(0)
  last_used_at       DateTime? @db.DateTime(0)
  last_used_ip       String?   @db.VarChar(255)
  activity_count     Int       @default(0)
  extended_at        DateTime? @db.DateTime(0)
  revoked            Boolean   @default(false)
  revoked_at         DateTime? @db.DateTime(0)
  ip_address         String?   @db.VarChar(100)
  user_agent         String?   @db.Text
  device_info        String?   @db.Text
  user               ow_users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tokens_users")

  @@index([user_id], map: "idx_user_id")
  @@index([last_used_at], map: "idx_tokens_last_used_at")
  @@index([last_used_ip], map: "idx_tokens_last_used_ip")
}

model ow_notifications {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id           Int
  title             String?   @db.VarChar(100)
  content           String?   @db.Text
  link              String?   @db.VarChar(255)
  metadata          Json?
  notification_type String    @db.VarChar(64)
  read              Boolean   @default(false)
  high_priority     Boolean   @default(false)
  hidden            Boolean   @default(false)
  push_channels     Json?     // 推送渠道配置 ["email", "browser", "push"]
  push_results      Json?     // 推送结果记录
  push_error        Boolean   @default(false) // 是否有推送错误
  created_at        DateTime  @default(now()) @db.Timestamp(0)
  read_at           DateTime? @db.Timestamp(0)
  actor_id          Int?
  target_type       String?   @db.VarChar(50)
  target_id         Int?
  data              Json?

  // Relations
  actor ow_users? @relation("NotificationActor", fields: [actor_id], references: [id])

  @@index([user_id, read, created_at], map: "idx_user_unread")
  @@index([user_id, created_at], map: "idx_user_all")
  @@index([actor_id], map: "idx_notification_actor")
  @@index([hidden], map: "idx_notification_hidden")
}

model ow_user_relationships {
  id                Int                       @id @default(autoincrement())
  source_user_id    Int
  target_user_id    Int
  relationship_type ow_user_relationship_type
  created_at        DateTime                  @default(now()) @db.Timestamp(0)
  updated_at        DateTime?                 @updatedAt @db.Timestamp(0)
  metadata          Json?

  // Relations
  source_user ow_users @relation("RelationshipSource", fields: [source_user_id], references: [id])
  target_user ow_users @relation("RelationshipTarget", fields: [target_user_id], references: [id])

  @@unique([source_user_id, target_user_id, relationship_type], name: "unique_user_relationship")
  @@index([source_user_id, relationship_type], map: "idx_source_user_relationships")
  @@index([target_user_id, relationship_type], map: "idx_target_user_relationships")
}

enum ow_users_contacts_contact_type {
  email
  phone
  qq
  other
  oauth_google
  oauth_github
  oauth_microsoft
  oauth_40code
  oauth_linuxdo
}

enum ow_user_relationship_type {
  follow
  block
  mute
  favorite
}

view ow_projects_search_view {
  id                  Int       @db.UnsignedInt
  name                String    @db.VarChar(128)
  title               String?   @db.VarChar(1000)
  description         String?   @db.VarChar(1000)
  authorid            Int
  state               String?   @db.VarChar(32)
  type                String?   @db.VarChar(32)
  license             String?   @db.VarChar(32)
  view_count          Int?      @db.UnsignedInt
  like_count          Int?      @default(0)
  favo_count          Int?      @default(0)
  star_count          Int?      @default(0)
  time                DateTime? @db.Timestamp(0)
  tags                String    @db.VarChar(100)
  author_display_name String?   @db.Char(20)
  author_username     String?   @db.Char(20)
  author_motto         String?   @db.LongText
  author_images       String?   @db.VarChar(255)
  author_type         String?   @db.VarChar(50)
  latest_source       String?   @db.MediumText
  comment_count       Int?      @default(0)
  latest_comment      String?   @db.MediumText
  recent_comments     String?   @db.Text
  recent_commits      Json?
  branches            Json?

  @@map("ow_projects_search")
}

// 设备信息表
model ow_analytics_device {
  id              Int      @id @default(autoincrement())
  fingerprint     String   // FingerprintJS 生成的指纹
  user_id         Int?     // 创建该设备记录时的用户ID
  hostname        String?  // 主机名
  screen          String?  // 屏幕分辨率
  language        String?  // 语言

  // UA解析字段
  browser         String?  // 浏览器名称 (从UA解析)
  browser_version String?  // 浏览器版本 (从UA解析)
  os             String?  // 操作系统 (从UA解析)
  os_version     String?  // 操作系统版本 (从UA解析)
  device_type    String?  // 设备类型: desktop/mobile/tablet (从UA解析)
  device_vendor  String?  // 设备制造商 (从UA解析)
  user_agent     String?  @db.MediumText // 原始User Agent

  first_seen     DateTime @default(now()) // 首次见到该设备的时间
  last_seen      DateTime @default(now()) // 最后一次见到该设备的时间

  // 关联的事件
  events         ow_analytics_event[]

  // 复合唯一索引：同一个fingerprint可以对应多个用户
  @@unique([fingerprint, user_id])
  @@index([user_id])
  @@index([first_seen])
  @@index([last_seen])
}

// 统计事件表
model ow_analytics_event {
  id              Int      @id @default(autoincrement())
  device          ow_analytics_device @relation(fields: [device_id], references: [id])
  device_id       Int
  user_id         Int?     // 事件发生时的用户ID

  // URL相关
  url             String   // 完整URL
  url_path        String   // URL路径部分
  url_query       String?  // URL查询参数
  referrer        String?  // 原始来源URL
  referrer_domain String?  // 来源域名
  referrer_path   String?  // 来源路径
  referrer_query  String?  // 来源查询参数
  page_title      String?  // 页面标题

  // 事件目标
  target_type     String   // 事件目标类型 (project, user等)
  target_id       Int      // 目标ID

  // IP相关信息 (每次访问都记录，因为可能变化)
  ip_address      String?  // IP地址
  country         String?  // 国家 (从IP解析)
  region          String?  // 地区/省份 (从IP解析)
  city            String?  // 城市 (从IP解析)
  timezone        String?  // 时区 (从IP解析)

  created_at      DateTime @default(now())

  @@index([device_id])
  @@index([user_id])
  @@index([created_at])
  @@index([referrer_domain])
  @@index([ip_address])
}

// OAuth应用表
model ow_oauth_applications {
  id              Int      @id @default(autoincrement())
  owner_id        Int
  name            String
  description     String?
  homepage_url    String?
  client_id       String   @unique
  client_secret   String
  redirect_uris   Json     // Stored as JSON array
  type            String   @default("oauth")
  client_type     String   @default("confidential") // "confidential" or "public"
  scopes          Json     // Stored as JSON array
  webhook_url     String?
  logo_url        String?
  terms_url       String?
  privacy_url     String?
  status          String   @default("active")
  is_verified     Boolean  @default(false)
  is_public       Boolean  @default(false)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  owner           ow_users @relation(fields: [owner_id], references: [id])
  authorizations  ow_oauth_authorizations[]
  access_tokens   ow_oauth_access_tokens[]

  @@index([owner_id])
  @@index([client_id])
  @@map("oauth_applications")
}

// OAuth授权记录表
model ow_oauth_authorizations {
  id                    Int       @id @default(autoincrement())
  application_id        Int       // OAuth应用ID
  user_id              Int       // 授权用户ID
  authorized_email     String    @db.VarChar(255) // 用户授权的邮箱
  scopes               Json      // 授权的权限范围
  code                 String?   @unique @db.VarChar(255) // 授权码
  code_challenge       String?   @db.VarChar(255) // PKCE挑战码
  code_challenge_method String?  @db.VarChar(20)  // PKCE方法
  code_expires_at      DateTime? // 授权码过期时间
  status               String    @default("active") @db.VarChar(50) // 授权状态
  last_used_at         DateTime? // 最后使用时间
  metadata             Json?     // 额外元数据
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  // 关联
  application          ow_oauth_applications @relation(fields: [application_id], references: [id])
  user                 ow_users             @relation(fields: [user_id], references: [id])
  access_tokens        ow_oauth_access_tokens[]

  @@unique([application_id, user_id])
  @@index([code])
  @@index([user_id])
}

// OAuth访问令牌表
model ow_oauth_access_tokens {
  id                    Int       @id @default(autoincrement())
  application_id        Int       // OAuth应用ID
  authorization_id      Int       // 授权记录ID
  user_id              Int       // 用户ID
  access_token         String    @unique @db.VarChar(255) // 访问令牌
  refresh_token        String?   @unique @db.VarChar(255) // 刷新令牌
  scopes               Json      // 令牌的权限范围
  expires_at           DateTime  // 访问令牌过期时间
  refresh_token_expires_at DateTime? // 刷新令牌过期时间
  ip_address           String?   @db.VarChar(100) // 创建时的IP地址
  user_agent           String?   @db.Text        // 创建时的User Agent
  last_used_at         DateTime? // 最后使用时间
  last_used_ip         String?   @db.VarChar(100) // 最后使用的IP
  is_revoked           Boolean   @default(false)  // 是否已撤销
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  // 关联
  application          ow_oauth_applications @relation(fields: [application_id], references: [id])
  authorization        ow_oauth_authorizations @relation(fields: [authorization_id], references: [id])
  user                 ow_users             @relation(fields: [user_id], references: [id])

  @@index([access_token])
  @@index([refresh_token])
  @@index([user_id])
  @@index([application_id])
  @@index([authorization_id])
}

// OAuth权限表
model ow_oauth_scopes {
  id                    Int       @id @default(autoincrement())
  name                 String    @unique @db.VarChar(100) // 权限名称
  description          String    @db.Text                // 权限描述
  is_default           Boolean   @default(false)         // 是否默认授权
  requires_verification Boolean   @default(false)        // 是否需要验证
  category             String    @db.VarChar(50)        // 权限分类
  risk_level           String    @default("low") @db.VarChar(20) // 风险等级
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt

  @@index([category])
  @@index([risk_level])
}

// User KV Store表
model ow_cache_kv {
  user_id    Int      @db.UnsignedInt
  key        String   @db.VarChar(255)
  value      Json
  creator_ip String?  @default("") @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @updatedAt @db.Timestamp(0)

  // Relations
  user ow_users @relation(fields: [user_id], references: [id])

  @@id([user_id, key])
  @@index([user_id])
  @@index([key])
}

model ow_coderun_devices {
  id                String    @id @default(uuid())
  device_name       String    @db.VarChar(255)
  runner_token      String    @unique @db.VarChar(255)
  request_url       String?   @db.VarChar(1024)
  status            String    @default("active") @db.VarChar(32)
  device_config     Json?     // Custom device configuration
  created_at        DateTime  @default(now()) @db.DateTime(0)
  updated_at        DateTime  @updatedAt @db.DateTime(0)

  @@index([status])
  @@index([runner_token])
}

model ow_scratch_extensions {
  id          Int       @id @default(autoincrement())
  projectid   Int
  branch      String    @default("") @db.VarChar(128)
  commit      String    @default("latest") @db.VarChar(64)
  image       String    @db.VarChar(255)
  samples     Int?      // Optional project ID for samples
  docs        String?   @db.VarChar(1024)
  scratchCompatible Boolean   @default(false)
  status      String    @default("developing") @db.VarChar(32)
  created_at  DateTime  @default(now()) @db.Timestamp(0)
  updated_at  DateTime  @updatedAt @db.Timestamp(0)

  // Relations
  project     ow_projects @relation("ProjectExtensions", fields: [projectid], references: [id])
  sample_project ow_projects? @relation("SampleProject", fields: [samples], references: [id])

  @@index([projectid], map: "idx_extension_project")
  @@index([status], map: "idx_extension_status")
  @@index([samples], map: "idx_extension_samples")
}

// 用户账户令牌表
model ow_account_tokens {
  id              Int       @id @default(autoincrement())
  user_id         Int       // 用户ID
  name            String    @db.VarChar(255) // 令牌名称/备注
  token           String    @unique @db.VarChar(255) // 令牌值
  expires_at      DateTime? // 过期时间，null表示永不过期
  is_revoked      Boolean   @default(false) // 是否被吊销
  revoked_at      DateTime? // 吊销时间
  last_used_at    DateTime? // 最后使用时间
  last_used_ip    String?   @db.VarChar(100) // 最后使用的IP地址
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  updated_at      DateTime  @updatedAt @db.Timestamp(0)

  // 关联用户
  user            ow_users  @relation("AccountTokens", fields: [user_id], references: [id])

  @@index([user_id])
  @@index([token])
  @@index([is_revoked])
  @@index([expires_at])
}

// 项目素材关联表
model ow_projects_assets {
  id              Int       @id @default(autoincrement())
  project_id      Int       @db.UnsignedInt
  asset_id        Int
  usage_context   String?   @db.VarChar(255) // 使用上下文（如：背景、角色、音效等）
  usage_order     Int?      @default(0) // 使用顺序
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  updated_at      DateTime  @updatedAt @db.Timestamp(0)

  // 关联
  project         ow_projects @relation("ProjectAssets", fields: [project_id], references: [id])
  asset           ow_assets   @relation("AssetProjects", fields: [asset_id], references: [id])

  @@unique([project_id, asset_id])
  @@index([project_id])
  @@index([asset_id])
  @@index([usage_context])
}

// 素材管理表
model ow_assets {
  id              Int       @id @default(autoincrement())
  md5             String    @unique @db.VarChar(32) // 标准MD5值
  filename        String    @db.VarChar(255) // 原始文件名
  extension       String    @db.VarChar(20) // 文件扩展名
  mime_type       String    @db.VarChar(100) // MIME类型
  file_size       Int       // 文件大小（字节）

  // 上传者信息
  uploader_id     Int       // 首次上传者ID
  uploader_ip     String?   @db.VarChar(100) // 上传者IP地址
  uploader_ua     String?   @db.MediumText // 上传者User Agent

  // 时间信息
  created_at      DateTime  @default(now()) @db.Timestamp(0) // 首次上传时间
  updated_at      DateTime  @updatedAt @db.Timestamp(0) // 最后更新时间

  // 封禁信息
  is_banned       Boolean   @default(false) // 是否被封禁
  banned_at       DateTime? @db.Timestamp(0) // 封禁时间
  banned_by       Int?      // 封禁操作者ID
  ban_reason      String?   @db.VarChar(500) // 封禁原因

  // 使用统计
  usage_count     Int       @default(0) // 使用次数
  last_used_at    DateTime? @db.Timestamp(0) // 最后使用时间

  // 文件元数据
  metadata        Json?     // 其他元数据（JSON格式）

  // 标签和分类
  tags            String?   @db.VarChar(500) // 标签（逗号分隔）
  category        String?   @db.VarChar(50) // 分类

  // 关联
  uploader        ow_users  @relation("AssetUploader", fields: [uploader_id], references: [id])
  banned_by_user  ow_users? @relation("AssetBannedBy", fields: [banned_by], references: [id])
  projects        ow_projects_assets[] @relation("AssetProjects")

  @@index([md5])
  @@index([uploader_id])
  @@index([created_at])
  @@index([is_banned])
  @@index([extension])
  @@index([category])
  @@index([usage_count])
}

// 浏览器通知订阅表
model ow_push_subscriptions {
  id              Int       @id @default(autoincrement())
  user_id         Int       // 用户ID
  endpoint        String    @db.VarChar(500) // 推送端点URL
  p256dh_key      String    @db.VarChar(255) // P256DH公钥
  auth_key        String    @db.VarChar(255) // 认证密钥
  user_agent      String?   @db.Text // 用户代理字符串
  device_info     Json?     // 设备信息（浏览器、操作系统等）
  is_active       Boolean   @default(true) // 是否活跃
  last_used_at    DateTime? @db.Timestamp(0) // 最后使用时间
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  updated_at      DateTime  @updatedAt @db.Timestamp(0)

  // 关联
  user            ow_users  @relation("UserPushSubscriptions", fields: [user_id], references: [id])

  @@unique([user_id, endpoint]) // 确保用户+端点唯一
  @@index([user_id])
  @@index([is_active])
  @@index([last_used_at])
}




